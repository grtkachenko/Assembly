#include <iostream>
#include <time.h>
#include <stdio.h>
#include <unistd.h>
const int NUM_MATRIX = 1000000;
extern "C" {
    void FDCT(float * in, float * out, int N);
    void IDCT(float * in, float * out, int N);
}
float data[64 * NUM_MATRIX] __attribute__ ((aligned (16))), data2[64 * NUM_MATRIX]__attribute__ ((aligned (16))) ;
int main() {
    float arr[8][8] =
    {{-16342, 2084, -10049, 10117, 2786, -659, -4905, 12975},
        {10579, 8081, -10678, 11762, 6898, 444, -6422, -15892},
        {-13388, -4441, -11556, -10947, 16008, -1779, -12481, -16230},
        {-16091, -4001, 1038, 2333, 3335, 3512, -10936, 5343},
        {-1612, -4845, -14514, 3529, 9284, 9916, 652, -6489},
        {12320, 7428, 14939, 13950, 1290, -11719, -1242, -8672},
        {11870, -9515, 9164, 11261, 16279, 16374, 3654, -3524},
        {-7660, -6642, 11146, -15605, -4067, -13348, 5807, -14541}};
    float ans[8][8] = {
        {-541.156, 564.183, -3225.06, 1029.39, 880.5, -500.075, -619.409, 250.288},
        {-1115.78, -1001.23, -431.803, 161.758, 1364.75, -2246.93, -1358.3, -2555.14},
        {135.138, 213.742, 755.227, -798.47, -511.912, 757.452, -328.224, 641.975},
        {2911.69, 358.601, 451.503, -772.025, 1295.27, 1140.53, -301.878, -1709.05},
        {-1597.88, -2786.38, 767.095, -1646.88, -785.531, -787.608, 71.4126, -446.098},
        {1035.58, -1972.48, -784.681, -1258.37, 469.222, -892.254, 1591.34, -245.704},
        {-2021.4, 491.207, 460.276, -1841.76, -760.928, -700.527, -766.29, 1317.45},
        {-480.216, -1925.16, -786.589, 2491.86, 304.856, -665.711, -30.9113, 152.51}
    };

    float * in = data, * out = data2;
    for (int num_t = 0; num_t < NUM_MATRIX; num_t++) {
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                in[num_t * 64 + i * 8 + j] = ans[i][j];
            }
        }

    }
    IDCT(in, out, NUM_MATRIX);
    for (int num_t = 0; num_t < 1; num_t++) {
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                printf("%.3f ", out[num_t * 64 + i * 8 + j]);    
            }
            printf("\n");
        }

    }
}
